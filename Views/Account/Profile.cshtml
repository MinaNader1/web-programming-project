@{
    var user = ViewBag.User as ApplicationUser;
    var ownedProperties = ViewBag.OwnedProperties as List<Property> ?? new List<Property>();
    var bookedProperties = ViewBag.BookedProperties as List<Property> ?? new List<Property>();
    var isManager = ViewBag.IsManager ?? false;
    var leases = ViewBag.Leases as List<Lease> ?? new List<Lease>();
}

<h2>@user.UserName's Profile</h2>

<!-- Profile Image -->
<img src="@(ViewBag.ProfileImagePath ?? Url.Content("/profilesimg/default.jpg"))" alt="Profile Image" class="rounded-circle" width="150" height="150" />

<p><strong>Email:</strong> @user.Email</p>
<p><strong>Full Name:</strong> @user.UserName</p>
<p><strong>Phone Number:</strong> @user.PhoneNumber</p>

@if (isManager)
{
    <h3>Properties Owned</h3>

    @if (ownedProperties.Count > 0)
    {
        <ul>
            @foreach (var property in ownedProperties)
            {
                <li>
                    @Html.ActionLink(property.Location, "Details", "Property", new { id = property.PropertyID }, null)

                    <!-- Display the Edit button for owned properties -->
                    @Html.ActionLink("Edit", "Edit", "Property", new { id = property.PropertyID }, new { @class = "btn btn-primary btn-sm" })

                    <!-- Display the Delete button for owned properties -->
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal" data-property-id="@property.PropertyID">
                        Delete
                    </button>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No owned properties.</p>
    }
}

<h3>Properties Booked</h3>

@if (bookedProperties.Count > 0)
{
    <ul>
        @foreach (var property in bookedProperties)
        {
            var lease = leases.FirstOrDefault(l => l.PropertyID == property.PropertyID); // Assuming the lease info is available
            if (lease != null)
            {
                <li>
                    @Html.ActionLink(property.Location, "Details", "Lease", new { id = lease.LeaseID }, null)
                </li>
            }
        }
    </ul>
}
else
{
    <p>No booked properties.</p>
}


<a class="btn btn-primary" asp-area="" asp-controller="Account" asp-action="EditProfile" asp-route-id="@user.Id">Edit Personal Info</a>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this property?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" asp-action="Delete" asp-controller="Property">
                    <input type="hidden" name="propertyId" id="propertyId" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set the property ID in the modal when the delete button is clicked
        const deleteButtons = document.querySelectorAll('[data-bs-toggle="modal"]');
        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const propertyId = this.getAttribute('data-property-id');
                document.getElementById('propertyId').value = propertyId;
            });
        });
    </script>
}
